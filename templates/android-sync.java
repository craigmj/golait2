package {{.PackageName}};

import android.os.Handler;
import android.os.Looper;
import android.util.Log;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.OutputStream;
import java.net.CookieHandler;
import java.net.CookieManager;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicLong;

import com.google.common.io.CharStreams;

{{$className := Outfile | Base | StripExt}}
/**
 * Generated by golait2 - DO NOT EDIT
 */
public class {{$className}} {
    protected static final String _TAG = {{$className}}.class.getName();
    protected static {{$className}} _singleton;
    protected final URL _url;

    protected final AtomicLong _id = new AtomicLong(0);

    public class _RPCException extends Exception {
        public int code;
        public JSONObject data;
        public _RPCException(int code, String message, JSONObject data) {
            super(message);
            this.code = code;
            this.data = data;
        }
    }

    public interface _Callback {
        public void onSuccess(JSONArray result);
        public void onError(Exception e);
    }
    public {{$className}}(String uri) throws MalformedURLException {
        _url = new URL(uri);
        CookieHandler.setDefault(new CookieManager());
    }

    {{range .Methods}}
    public JSONArray {{.Name}}({{range $i, $p := .Parameters}}
        {{if $i}},{{end}}
        final {{$p.Field.JavaType}} {{$p.Field.TitleName}}
        {{end}}) throws _RPCException, JSONException {
            JSONObject _params = new JSONObject();
            {{range $i, $p := .Parameters}}
            _params.put("{{$i}}", {{$p.Field.TitleName}});
            {{end}}
            return _rpc("{{.Name}}", _params);
    }
    {{end}}

    protected JSONArray _rpc(String method, JSONObject params) throws _RPCException, JSONException {
        JSONObject jsonRPC = new JSONObject();
        // jsonRPC.put("jsonrpc", "2.0");   // We don't check this so why waste the bandwidth?
        jsonRPC.put("method", method);
        jsonRPC.put("params", params);
        jsonRPC.put("id", _id.getAndAdd(1));

        Log.d(_TAG, "Sending rpc data to " + method);

       try {
            HttpURLConnection urlConnection = (HttpURLConnection) _url.openConnection();
            Log.d(_TAG, "Connection established");
            urlConnection.setDoOutput(true);
            byte[] data = jsonRPC.toString().getBytes("utf-8");
            urlConnection.setFixedLengthStreamingMode(data.length);
            Log.d(_TAG,"About to write jsonRPC: " + new String(data));
            OutputStream out = new BufferedOutputStream(urlConnection.getOutputStream());
            out.write(data);
            out.close();
            Log.d(_TAG, "jsonRPC written, going to read");

            String inJSON = CharStreams.toString(new InputStreamReader(new BufferedInputStream(urlConnection.getInputStream())));
            Log.d(_TAG, "Read response: " + inJSON);

            JSONObject result = new JSONObject(inJSON);
            if (result.has("error")) {
                JSONObject err = result.getJSONObject("error");
                throw new _RPCException(err.optInt("code"), err.optString("message"),
                        err.optJSONObject("data"));
            } else {
                return result.getJSONArray("result");
            }
        } catch (IOException ix) {
            Log.e(_TAG, "IOException : " + ix.getLocalizedMessage());
            throw new _RPCException(500, ix.getLocalizedMessage(), null);
         } catch (JSONException jx) {
            Log.e(_TAG, "JSONException: " + jx.getLocalizedMessage());
            // We will use -32603 = Internal error, since we've got bad
            // JSON from the server => the fault is on the server. It's not 
            // -32600, which is a fault with the JSON request.
            throw new _RPCException(-32603, jx.getLocalizedMessage(), null);
         }

    }

    public synchronized static {{$className}} instance(String uri) throws MalformedURLException {
        if (null==_singleton) {
            _singleton = new {{$className}}(uri);
        }
        return _singleton;
    }
    public synchronized static {{$className}} instance() {
        return _singleton;
    }
}
